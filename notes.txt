sudo apt update
sudo apt install python3-pip
sudo apt-get update
sudo apt-get install python3-venv
sudo apt install supervisor

sudo apt-get install nginx &&
sudo apt install ffmpeg &&
sudo apt-get install wkhtmltopdf &&
sudo apt install libimage-exiftool-perl &&
sudo apt-get install rabbitmq-server -y --fix-missing

Generate Self Certified SSL key:

sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/cert.key -out /etc/nginx/cert.crt
Create pg-video-conversion in /etc/nginx/sites-enabled with below content:

server {
    server_name ec2-13-126-108-37.ap-south-1.compute.amazonaws.com;
    listen 80;
    return 301 https://$host$request_uri;
}

server {
    server_name ec2-13-126-108-37.ap-south-1.compute.amazonaws.com;
    listen 443 ssl;

    ssl_certificate           /etc/nginx/cert.crt;
    ssl_certificate_key       /etc/nginx/cert.key;

    ssl on;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    root /home/ubuntu/app/pg-video-convertor/build;
    index index.html index.htm;

    gzip on;
    gzip_types text/html application/javascript application/json text/css;
    location / {
            try_files $uri $uri/ /index.html;
    }
    location /api/ {
            proxy_pass http://localhost:8000;
            proxy_set_header Host $host;
    }
    location ~ .(static)/(js|css|media)/(.+)$ {
	try_files $uri $uri/ /$1/$2/$3;
    }
}

Request entity too large error:
sudo nano /etc/nginx/nginx.conf -> client_max_body_size 100M; (under http)

sudo nano /etc/supervisor/conf.d/app.conf
Supervisor config:
[program:app]
directory=/home/ubuntu/app/pg-video-convertor-api
command=/home/ubuntu/app/pg-video-convertor-api/pg-venv/bin/gunicorn --workers=3 app:app
autostart=true
autorestart=true
stopasgroup=true
killasgroup=true
stderr_logfile=/var/log/app/app.err.log
stdout_logfile=/var/log/app/app.out.log
----------------------------------------
sudo mkdir /var/log/app
sudo touch /var/log/app/app.err.log
sudo touch /var/log/app/app.out.log

cd ~
mkdir app
git clone https://github.com/saravanaselvan/pg-video-convertor-api.git

cd pg-video-convertor-api
cd ~
mkdir private
mkdir private/input_videos
mkdir private/output_files
touch private/celery.log

- create .env and config.py file inside /home/ubuntu/private directory

.env
export DATABASE_URL="mysql+pymysql://<USERNAME>:<PASSWORD>@photogauge-videos.cnpg2vcq5szp.ap-south-1.rds.amazonaws.com/pg-videos"
export UPLOAD_FOLDER = 'private/input_videos'
export OUTPUT_FOLDER = 'private/output_files'
export MODEL_NAME = '0'

config.py
JWT_SECRET_KEY = '<RANDOM KEY>'
SQLALCHEMY_TRACK_MODIFICATIONS = False
PROPAGATE_EXCEPTIONS = True
JSON_SORT_KEYS = False
BROKER_URL = "amqp://localhost/"
CELERY_RESULT_BACKEND = "db+mysql+pymysql://<USERNAME>:<PASSWORD>@photogauge-videos.cnpg2vcq5szp.ap-south-1.rds.amazonaws.com/pg-videos"

sudo ln -s /home/ubuntu/private/.env /home/ubuntu/app/pg-video-convertor-api/.env
sudo ln -s /home/ubuntu/private/config.py /home/ubuntu/app/pg-video-convertor-api/config.py
sudo ln -s /home/ubuntu/private /home/ubuntu/app/pg-video-convertor-api/private
sudo ln -s /home/ubuntu/private/input_videos /home/ubuntu/app/pg-video-convertor-api/private/input_videos
sudo ln -s /home/ubuntu/private/output_files /home/ubuntu/app/pg-video-convertor-api/private/output_files


python3 -m venv pg-venv
. pg-venv/bin/activate
python3 -m pip install -r requirements.txt

cd ~/app
git clone https://github.com/saravanaselvan/pg-video-convertor.git

sudo rabbitmq-server - Start server
sudo rabbitmqctl status
sudo rabbitmqctl stop

Run Worker inside the project folder with pg-venv:
celery -A app.celery  worker -f ~/private/celery.log --loglevel=info


sudo service nginx restart

Supervisor
sudo supervisorctl reread
sudo supervisorctl reload
sudo service supervisor restart

These two installations not added to requirements.txt. Install them separately.

python3 -m pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cpu
python3 -m pip install git+https://github.com/facebookresearch/detectron2

